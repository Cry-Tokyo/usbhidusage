#[derive(Clone, Copy, PartialEq, PartialOrd, Ord, Eq, Hash, Debug, Default)]
#[non_exhaustive]
#[repr(u16)]
pub enum SportControlsUsage {
    #[default]
    Undefined,
    BaseballBat,
    GolfClub,
    RowingMachine,
    Treadmill,
    Reserved05_2F(u16),
    Oar = 0x30,
    Slope,
    Rate,
    StickSpeed,
    StickFaceAngle,
    StickHeel_Toe,
    StickFollowThrough,
    StickTempo,
    StickType,
    StickHeight,
    Reserved3A_4F(u16),
    Putter = 0x50,
    _1Iron,
    _2Iron,
    _3Iron,
    _4Iron,
    _5Iron,
    _6Iron,
    _7Iron,
    _8Iron,
    _9Iron,
    _10Iron,
    _11Iron,
    SandWedge,
    LoftWedge,
    PowerWedge,
    _1Wood,
    _3Wood,
    _5Wood,
    _7Wood,
    _9Wood,
    Reserved64_FFFF(u16),
}
impl<T> From<T> for SportControlsUsage
where
    T: TryInto<u16>,
{
    fn from(value: T) -> Self {
        let value = value.try_into().unwrap_or(0);
        match value {
            0 => Self::Undefined,
            1 => Self::BaseballBat,
            2 => Self::GolfClub,
            3 => Self::RowingMachine,
            4 => Self::Treadmill,
            5..48 => Self::Reserved05_2F(value),
            48 => Self::Oar,
            49 => Self::Slope,
            50 => Self::Rate,
            51 => Self::StickSpeed,
            52 => Self::StickFaceAngle,
            53 => Self::StickHeel_Toe,
            54 => Self::StickFollowThrough,
            55 => Self::StickTempo,
            56 => Self::StickType,
            57 => Self::StickHeight,
            58..80 => Self::Reserved3A_4F(value),
            80 => Self::Putter,
            81 => Self::_1Iron,
            82 => Self::_2Iron,
            83 => Self::_3Iron,
            84 => Self::_4Iron,
            85 => Self::_5Iron,
            86 => Self::_6Iron,
            87 => Self::_7Iron,
            88 => Self::_8Iron,
            89 => Self::_9Iron,
            90 => Self::_10Iron,
            91 => Self::_11Iron,
            92 => Self::SandWedge,
            93 => Self::LoftWedge,
            94 => Self::PowerWedge,
            95 => Self::_1Wood,
            96 => Self::_3Wood,
            97 => Self::_5Wood,
            98 => Self::_7Wood,
            99 => Self::_9Wood,
            100..=65535 => Self::Reserved64_FFFF(value),
        }
    }
}
