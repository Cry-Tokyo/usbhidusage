#[derive(Clone, Copy, PartialEq, PartialOrd, Ord, Eq, Hash, Debug, Default)]
#[non_exhaustive]
#[repr(u16)]
pub enum MagneticStripeReaderUsage {
    #[default]
    Undefined,
    MedicalUltrasound,
    Reserved02_1F(u16),
    VCR_Acquisition = 32,
    Freeze_Thaw,
    ClipStore,
    Update,
    Next,
    Save,
    Print,
    MicrophoneEnable,
    Reserved28_3F(u16),
    Cine = 64,
    TransmitPower,
    Volume,
    Focus,
    Depth,
    Reserved45_5F(u16),
    SoftStep_Primary = 96,
    SoftStep_Secondary,
    Reserved62_6F(u16),
    DepthGainCompensation = 112,
    Reserved71_7F(u16),
    ZoomSelect = 128,
    ZoomAdjust,
    SpectralDopplerModeSelect,
    SpectralDopplerAdjust,
    ColorDopplerModeSelect,
    ColorDopplerAdjust,
    MotionModeSelect,
    MotionModeAdjust,
    _2DModeSelect,
    _2DModeAdjust,
    Reserved8A_9F(u16),
    SoftControlSelect = 160,
    SoftControlAdjust,
    ReservedA2_FFFF(u16),
}
impl<T> From<T> for MagneticStripeReaderUsage
where
    T: TryInto<u16>,
{
    fn from(value: T) -> Self {
        let value = value.try_into().unwrap_or(0);
        match value {
            0 => Self::Undefined,
            1 => Self::MedicalUltrasound,
            2..32 => Self::Reserved02_1F(value),
            32 => Self::VCR_Acquisition,
            33 => Self::Freeze_Thaw,
            34 => Self::ClipStore,
            35 => Self::Update,
            36 => Self::Next,
            37 => Self::Save,
            38 => Self::Print,
            39 => Self::MicrophoneEnable,
            40..64 => Self::Reserved28_3F(value),
            64 => Self::Cine,
            65 => Self::TransmitPower,
            66 => Self::Volume,
            67 => Self::Focus,
            68 => Self::Depth,
            69..96 => Self::Reserved45_5F(value),
            96 => Self::SoftStep_Primary,
            97 => Self::SoftStep_Secondary,
            98..112 => Self::Reserved62_6F(value),
            112 => Self::DepthGainCompensation,
            113..128 => Self::Reserved71_7F(value),
            128 => Self::ZoomSelect,
            129 => Self::ZoomAdjust,
            130 => Self::SpectralDopplerModeSelect,
            131 => Self::SpectralDopplerAdjust,
            132 => Self::ColorDopplerModeSelect,
            133 => Self::ColorDopplerAdjust,
            134 => Self::MotionModeSelect,
            135 => Self::MotionModeAdjust,
            136 => Self::_2DModeSelect,
            137 => Self::_2DModeAdjust,
            138..160 => Self::Reserved8A_9F(value),
            160 => Self::SoftControlSelect,
            161 => Self::SoftControlAdjust,
            162 => Self::ReservedA2_FFFF(value),
        }
    }
}
