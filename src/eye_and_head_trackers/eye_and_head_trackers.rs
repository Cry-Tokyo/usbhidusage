#[derive(Clone, Copy, PartialEq, PartialOrd, Ord, Eq, Hash, Debug, Default)]
#[non_exhaustive]
#[repr(u16)]
pub enum EyeAndHeadTrackersUsage {
    #[default]
    Undefined,
    EyeTracker,
    HeadTracker,
    Reserved03_0F(u16),
    TrackingData = 16,
    Capabilities,
    Configuration,
    Status,
    Control,
    Reserved15_1F(u16),
    SensorTimestamp = 32,
    PositionX,
    PositionY,
    PositionZ,
    GazePoint,
    LeftEyePosition,
    RightEyePosition,
    HeadPosition,
    HeadDirectionPoint,
    RotationaboutXaxis,
    RotationaboutYaxis,
    RotationaboutZaxis,
    Reserved2C_FF(u16),
    TrackerQuality = 256,
    MinimumTrackingDistance,
    OptimumTrackingDistance,
    MaximumTrackingDistance,
    MaximumScreenPlaneWidth,
    MaximumScreenPlaneHeight,
    Reserved106_1FF(u16),
    DisplayManufacturerID = 512,
    DisplayProductID,
    DisplaySerialNumber,
    DisplayManufacturerDate,
    CalibratedScreenWidth,
    CalibratedScreenHeight,
    Reserved206_2FF(u16),
    SamplingFrequency = 768,
    ConfigurationStatus,
    Reserved302_3FF(u16),
    DeviceModeRequest = 1024,
    Reserved401_FFFF(u16),
}
impl<T> From<T> for EyeAndHeadTrackersUsage
where
    T: TryInto<u16>,
{
    fn from(value: T) -> Self {
        let value = value.try_into().unwrap_or(0);
        match value {
            0 => Self::Undefined,
            1 => Self::EyeTracker,
            2 => Self::HeadTracker,
            3..16 => Self::Reserved03_0F(value),
            16 => Self::TrackingData,
            17 => Self::Capabilities,
            18 => Self::Configuration,
            19 => Self::Status,
            20 => Self::Control,
            21..32 => Self::Reserved15_1F(value),
            32 => Self::SensorTimestamp,
            33 => Self::PositionX,
            34 => Self::PositionY,
            35 => Self::PositionZ,
            36 => Self::GazePoint,
            37 => Self::LeftEyePosition,
            38 => Self::RightEyePosition,
            39 => Self::HeadPosition,
            40 => Self::HeadDirectionPoint,
            41 => Self::RotationaboutXaxis,
            42 => Self::RotationaboutYaxis,
            43 => Self::RotationaboutZaxis,
            44..256 => Self::Reserved2C_FF(value),
            256 => Self::TrackerQuality,
            257 => Self::MinimumTrackingDistance,
            258 => Self::OptimumTrackingDistance,
            259 => Self::MaximumTrackingDistance,
            260 => Self::MaximumScreenPlaneWidth,
            261 => Self::MaximumScreenPlaneHeight,
            262..512 => Self::Reserved106_1FF(value),
            512 => Self::DisplayManufacturerID,
            513 => Self::DisplayProductID,
            514 => Self::DisplaySerialNumber,
            515 => Self::DisplayManufacturerDate,
            516 => Self::CalibratedScreenWidth,
            517 => Self::CalibratedScreenHeight,
            518..768 => Self::Reserved206_2FF(value),
            768 => Self::SamplingFrequency,
            769 => Self::ConfigurationStatus,
            770..1024 => Self::Reserved302_3FF(value),
            1024 => Self::DeviceModeRequest,
            1025..=65535 => Self::Reserved401_FFFF(value),
        }
    }
}
